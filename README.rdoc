= ImportCsv

* Provides mechanism to import csv.
* Records imports to database to display them to user.
* Supports async importing.

== Usage

=== Include to your Gemfile and migrate database to add imports and import_errors tables

    gem "import_csv", git: "git@github.com:bitzesty/import_csv"

    bundle
    rake db:migrate

=== To import objects via CSV:

* Generate importer skeleton together with example

    # make sure you understand what will be generated
    rails g import_csv --help

    # to generate
    #   controllers and views namespaced under admin/csv_imports
    #   javascripts namespaced under common
    #   model and controller for Scheme import
    rails g import_csv Scheme admins common --pretend # remove pretend once happy with namespaces

    # generate second model
    rails g import_csv Profile admins common --skip-skeleton --pretend # remove pretend once happy with namespaces

* Ensure that you have localization helper defined:
  https://github.com/bitzesty/import_csv/blob/master/spec/dummy/app/helpers/application_helper.rb#L30

* Update import csv initializer

    config/initializers/import_csv.rb

* Define a strategy to build the imported object from csv attributes by updating generated

    app/strategies/build_for_csv_import/<model>.rb

  https://github.com/bitzesty/import_csv/blob/master/spec/dummy/app/strategies/build_for_csv_import/company.rb

* Update sample csv file in

    public/downloads/<models>_sample.csv

  https://github.com/bitzesty/import_csv/blob/master/spec/dummy/public/downloads/companies_sample.csv

* Allow to launch the import updating

    app/controllers/csv_imports/<models>_controller.rb

  https://github.com/bitzesty/import_csv/blob/master/spec/dummy/app/controllers/csv_imports/companies_controller.rb

  or launch manually as per:
  https://github.com/bitzesty/import_csv/blob/master/spec/dummy/app/interactors/import_via_csv/companies.rb

=== Check out the application on local to see how it looks

    git clone git@github.com:bitzesty/import_csv.git
    cd import_csv
    bundle
    spring rake db:create db:migrate

    cd import_csv/spec/dummy
    bundle
    spring rake db:migrate
    spring rails s

Launch at http://localhost:3000

== TODO

* Currently supports only ActiveRecord
* Currently supports carrierwave uploaders
* Currently depends on Sidekiq for async execution

== Development

* Clone the repository
* Migrate database

    bundle exec rake -f spec/dummy/Rakefile db:create db:migrate
    RAILS_ENV=test bundle exec rake -f spec/dummy/Rakefile db:migrate

* Run specs

    rspec

* Launch dummy application

    cd spec/dummy
    spring rails s

Visit http://localhost:3000
